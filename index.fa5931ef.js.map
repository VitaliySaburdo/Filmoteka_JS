{"mappings":"gfAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SAEME,EAAkBC,SAASC,cAAc,iBAEzCC,EAAa,IAAI,EAAAJ,EAAAK,SAEvBD,EAAWE,YAAYC,MAAK,SAAAC,G,IAAGC,EAAMD,EAANC,OAE7BC,EAAO,aAAcD,GACrBE,KAAKC,MAAMC,aAAaC,QAAQ,c,IAGlC,IAAMJ,EAAS,SAACK,EAAKC,GACnB,IACE,IAAMC,EAAkBN,KAAKO,UAAUF,GACvCH,aAAaM,QAAQJ,EAAKE,E,CAC1B,MAAOG,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAI7ClB,EAAWmB,qBAAqBhB,MAAK,SAAAiB,IAIrC,SAA4BA,GAC1B,IAAMC,EAASD,EACZE,KACC,SAAAlB,G,IACEmB,EAAEnB,EAAFmB,GACAC,EAAcpB,EAAdoB,eACAC,EAAWrB,EAAXqB,YACAC,EAAKtB,EAALsB,MACAC,EAASvB,EAATuB,UACAC,EAAYxB,EAAZwB,a,MACI,sCACQC,OAD8BN,EAAG,0BAGlCM,OAYnB,SAAmBJ,GACjB,OAAIA,EACK,kCAA8CI,OAAZJ,GAEnC,wF,CAlBUK,CACVL,GACA,WAC2BI,OADlBH,EAAM,0FAESG,OAwBlC,SAAoBL,GAClB,IAAMO,EAAMP,EAAeQ,MAAM,IAEjC,OAAID,EAAIE,QAAU,GACTF,EAAIG,MAAM,EAAG,IAAIC,KAAK,IAAM,MAE9BX,C,CA/B4BY,CAAWZ,GAAgB,2CACFK,OAiC9D,SAAqBF,GACnB,IAAMU,EAAa9B,KAAKC,MAAMC,aAAaC,QAAQ,eAE7C4B,EAAY,GACbC,GAAc,EAAdC,GAAc,EAAdC,OAAcC,E,IAAnB,QAAKC,EAAAC,EAAkBjB,EAASkB,OAAAC,cAA3BP,GAAAI,EAAAC,EAAcG,QAAAC,MAAdT,GAAc,EAAe,CAA7B,IAAMU,EAANN,EAAc/B,MACZsC,GAAc,EAAdC,GAAc,EAAdC,OAAcV,E,IAAnB,QAAKW,EAAAC,EAAkBjB,EAAUQ,OAAAC,cAA5BI,GAAAG,EAAAC,EAAcP,QAAAC,MAAdE,GAAc,GAAd,IAAMK,EAANF,EAAczC,MACb2C,EAAShC,KAAO0B,GAClBX,EAAUkB,KAAKD,EAASE,K,WAFvBN,GAAc,EAAdC,EAAcM,C,aAAdR,GAAc,MAAdI,EAAcK,QAAdL,EAAcK,Q,YAAdR,E,MAAAC,C,aADFZ,GAAc,EAAdC,EAAciB,C,aAAdnB,GAAc,MAAdK,EAAce,QAAdf,EAAce,Q,YAAdnB,E,MAAAC,C,EAOL,OAAIH,EAAUL,OAAS,EACdK,EAAUJ,MAAM,EAAG,GAAGC,KAAK,MAAQ,UAErCG,EAAUH,KAAK,K,CA/CUyB,CAAYjC,GAAW,OAEjDE,OAeR,SAAmBD,GACjB,OAAIA,EACKA,EAAaI,MAAM,KAAK,GAE1B,E,CArBqD6B,CACtDjC,GACA,gB,IAGHO,KAAK,IAERtC,EAAgBiE,mBAAmB,YAAazC,E,CAzBhD0C,CAAmB3C,EAAK4C,Q","sources":["src/index.js","src/js/gallery.js"],"sourcesContent":["import './js/fetch';\nimport './js/gallery';\nimport './js/modal';\nimport './js/localStorage';\nimport './js/scroll';\nimport './js/switch-theme';\n","import newsApiService from './fetch';\n\nconst imageGallaryRef = document.querySelector('.gallery-list');\n\nconst ApiService = new newsApiService();\n\nApiService.getGenres().then(({ genres }) => {\n  //Добавление списка жанров в localStorage\n  saveLs('genresList', genres);\n  JSON.parse(localStorage.getItem('genresList'));\n});\n\nconst saveLs = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nApiService.fetchTrendingMovie().then(data => {\n  renderGalleryFilms(data.results);\n});\n\nfunction renderGalleryFilms(data) {\n  const markup = data\n    .map(\n      ({\n        id,\n        original_title,\n        poster_path,\n        title,\n        genre_ids,\n        release_date,\n      }) => `<li class=\"gallery__item\" data-id=\"${id}\">\n        <img src=\"${renderImg(\n          poster_path\n        )}\" alt=\"${title}\" class=\"gallery_img\" width=\"395\" height=\"574\" />\n        <h2 class=\"gallery__title\">${checkTitle(original_title)}</h2>\n        <p class=\"gallery__txt\">${changeGenre(genre_ids)} | ${checkDate(\n        release_date\n      )}\n      </li>`\n    )\n    .join('');\n\n  imageGallaryRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction renderImg(poster_path) {\n  if (poster_path) {\n    return `https://image.tmdb.org/t/p/w500${poster_path}`;\n  }\n  return `https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png?20170513175923`;\n}\n\nfunction checkDate(release_date) {\n  if (release_date) {\n    return release_date.split('-')[0];\n  }\n  return '';\n}\n\nfunction checkTitle(original_title) {\n  const arr = original_title.split('');\n\n  if (arr.length >= 33) {\n    return arr.slice(0, 33).join('') + '...';\n  }\n  return original_title;\n}\n\nfunction changeGenre(genre_ids) {\n  const genresInfo = JSON.parse(localStorage.getItem('genresList'));\n\n  const genrArrey = [];\n  for (const genre_id of genre_ids) {\n    for (const genrInfo of genresInfo) {\n      if (genrInfo.id === genre_id) {\n        genrArrey.push(genrInfo.name);\n      }\n    }\n  }\n  if (genrArrey.length > 2) {\n    return genrArrey.slice(0, 2).join(', ') + ', Other';\n  }\n  return genrArrey.join(', ');\n}\n"],"names":["parcelRequire","$5g02X","$6756f0db6f988caf$var$imageGallaryRef","document","querySelector","$6756f0db6f988caf$var$ApiService","default","getGenres","then","param","genres","$6756f0db6f988caf$var$saveLs","JSON","parse","localStorage","getItem","key","value","serializedState","stringify","setItem","error","console","message","fetchTrendingMovie","data","markup","map","id","original_title","poster_path","title","genre_ids","release_date","concat","$6756f0db6f988caf$var$renderImg","arr","split","length","slice","join","$6756f0db6f988caf$var$checkTitle","genresInfo","genrArrey","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genre_id","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","genrInfo","push","name","err","return","$6756f0db6f988caf$var$changeGenre","$6756f0db6f988caf$var$checkDate","insertAdjacentHTML","$6756f0db6f988caf$var$renderGalleryFilms","results"],"version":3,"file":"index.fa5931ef.js.map"}