{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/pagination.js","src/js/search.js"],"sourcesContent":["import './js/fetch';\nimport './js/gallery';\nimport './js/modal';\nimport './js/localStorage';\nimport './js/scroll';\nimport './js/switch-theme';\nimport './js/pagination';\nimport './js/search';\n","import newsApiService from './fetch';\nimport { addToStorage, getFromStorage } from './localStorage';\n\nconst imageGallaryRef = document.querySelector('.gallery-list');\n\nconst ApiService = new newsApiService();\n\nApiService.getGenres().then(({ genres }) => {\n  addToStorage('genresList', genres);\n});\n\nApiService.fetchTrendingMovie().then(data => {\n  renderGalleryFilms(data.results);\n});\n\nfunction renderGalleryFilms(data) {\n  const markup = data\n    .map(\n      ({\n        id,\n        original_title,\n        poster_path,\n        title,\n        genre_ids,\n        release_date,\n      }) => `<li class=\"gallery__item\" data-id=\"${id}\">\n        <img src=\"${renderImg(\n        poster_path\n      )}\" alt=\"${title}\" class=\"gallery_img\" width=\"395\" height=\"574\" />\n        <h2 class=\"gallery__title\">${checkTitle(original_title)}</h2>\n        <p class=\"gallery__txt\">${changeGenre(genre_ids)} | ${checkDate(\n        release_date\n      )}\n      </li>`\n    )\n    .join('');\n\n  imageGallaryRef.insertAdjacentHTML('beforeend', markup);\n\n  function renderImg(poster_path) {\n    if (poster_path) {\n      return `https://image.tmdb.org/t/p/w500${poster_path}`;\n    }\n    return `https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png?20170513175923`;\n  }\n\n  function checkDate(release_date) {\n    if (release_date) {\n      return release_date.split('-')[0];\n    }\n    return '';\n  }\n\n  function checkTitle(original_title) {\n    const arr = original_title.split('');\n\n    if (arr.length >= 33) {\n      return arr.slice(0, 33).join('') + '...';\n    }\n    return original_title;\n  }\n\n  function changeGenre(genre_ids) {\n    const genresInfo = getFromStorage('genresList');\n\n    const genrArrey = [];\n    for (const genre_id of genre_ids) {\n      for (const genrInfo of genresInfo) {\n        if (genrInfo.id === genre_id) {\n          genrArrey.push(genrInfo.name);\n        }\n      }\n    }\n    if (genrArrey.length > 2) {\n      return genrArrey.slice(0, 2).join(', ') + ', Other';\n    }\n    return genrArrey.join(', ');\n  }\n}\n\nexport { renderGalleryFilms };\n","import newsApiService from './fetch';\nimport { addToStorage, getFromStorage, moviesDataUpdate } from './localStorage';\nimport { renderGalleryFilms } from './gallery';\n\nconst ApiService = new newsApiService();\n\nconst galleryEl = document.querySelector('.gallery-list');\nconst paginationBar = document.querySelector('.pagination-btns');\nconst prevBtn = document.querySelector('.page-btn.prev');\nconst nextBtn = document.querySelector('.page-btn.next');\n\n","import NewsApiService from './fetch';\nimport { renderGalleryFilms } from './gallery';\n\nconst NewApiService = new NewsApiService();\nconst searchForm = document.querySelector('#header-form');\nconst cardsContainer = document.querySelector('.gallery-list');\n\nsearchForm.addEventListener('submit', onSubmit);\n\nlet currentPage = 1;\nlet amountOfPages = 1;\nlet query = '';\nlet dataArray = [];\n\nasync function onSubmit(e) {\n  e.preventDefault();\n  query = e.currentTarget.elements.searchQuery.value.trim();\n  try {\n    const { results, page, total_pages } = await NewApiService.getFilmOnSearch(\n      query\n    );\n    currentPage = page;\n    amountOfPages = total_pages;\n    dataArray = results;\n  } catch (error) {\n    console.log(error);\n  }\n  cardsContainer.innerHTML = '';\n  renderGalleryFilms(dataArray);\n  console.log(amountOfPages);\n}\n"],"names":["parcelRequire","$5g02X","$6756f0db6f988caf$var$imageGallaryRef","document","querySelector","$6756f0db6f988caf$var$ApiService","default","$6756f0db6f988caf$export$7303e8af20b87c34","data","markup","map","param","id","original_title","poster_path","title","genre_ids","release_date","concat","renderImg","arr","split","length","slice","join","checkTitle","genresInfo","$UL92Z","getFromStorage","genrArrey","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genre_id","value","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","genrInfo","push","name","err","return","changeGenre","checkDate","insertAdjacentHTML","getGenres","then","genres","addToStorage","fetchTrendingMovie","results","$bpxeT","$d35904b1c7f1c41e$var$NewApiService","$d35904b1c7f1c41e$var$searchForm","$d35904b1c7f1c41e$var$cardsContainer","addEventListener","e","$d35904b1c7f1c41e$var$_onSubmit","apply","this","arguments","$d35904b1c7f1c41e$var$amountOfPages","$d35904b1c7f1c41e$var$query","$d35904b1c7f1c41e$var$dataArray","$parcel$interopDefault","$2TvXO","mark","_callee","ref","page","total_pages","preventDefault","currentTarget","elements","searchQuery","trim","getFilmOnSearch","_ctx","sent","console","log","t0","innerHTML"],"version":3,"file":"index.155cd3ea.js.map"}